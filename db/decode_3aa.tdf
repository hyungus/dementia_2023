--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=32 LPM_WIDTH=5 data eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:11:11:17:06:45:SJ cbx_lpm_add_sub 2020:11:11:17:06:45:SJ cbx_lpm_compare 2020:11:11:17:06:45:SJ cbx_lpm_decode 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ cbx_nadder 2020:11:11:17:06:46:SJ cbx_stratix 2020:11:11:17:06:46:SJ cbx_stratixii 2020:11:11:17:06:46:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_3aa
( 
	data[4..0]	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode328w[2..0]	: WIRE;
	w_anode342w[3..0]	: WIRE;
	w_anode359w[3..0]	: WIRE;
	w_anode369w[3..0]	: WIRE;
	w_anode379w[3..0]	: WIRE;
	w_anode389w[3..0]	: WIRE;
	w_anode399w[3..0]	: WIRE;
	w_anode409w[3..0]	: WIRE;
	w_anode419w[3..0]	: WIRE;
	w_anode431w[2..0]	: WIRE;
	w_anode441w[3..0]	: WIRE;
	w_anode452w[3..0]	: WIRE;
	w_anode462w[3..0]	: WIRE;
	w_anode472w[3..0]	: WIRE;
	w_anode482w[3..0]	: WIRE;
	w_anode492w[3..0]	: WIRE;
	w_anode502w[3..0]	: WIRE;
	w_anode512w[3..0]	: WIRE;
	w_anode523w[2..0]	: WIRE;
	w_anode533w[3..0]	: WIRE;
	w_anode544w[3..0]	: WIRE;
	w_anode554w[3..0]	: WIRE;
	w_anode564w[3..0]	: WIRE;
	w_anode574w[3..0]	: WIRE;
	w_anode584w[3..0]	: WIRE;
	w_anode594w[3..0]	: WIRE;
	w_anode604w[3..0]	: WIRE;
	w_anode615w[2..0]	: WIRE;
	w_anode625w[3..0]	: WIRE;
	w_anode636w[3..0]	: WIRE;
	w_anode646w[3..0]	: WIRE;
	w_anode656w[3..0]	: WIRE;
	w_anode666w[3..0]	: WIRE;
	w_anode676w[3..0]	: WIRE;
	w_anode686w[3..0]	: WIRE;
	w_anode696w[3..0]	: WIRE;
	w_data326w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode696w[3..3], w_anode686w[3..3], w_anode676w[3..3], w_anode666w[3..3], w_anode656w[3..3], w_anode646w[3..3], w_anode636w[3..3], w_anode625w[3..3]), ( w_anode604w[3..3], w_anode594w[3..3], w_anode584w[3..3], w_anode574w[3..3], w_anode564w[3..3], w_anode554w[3..3], w_anode544w[3..3], w_anode533w[3..3]), ( w_anode512w[3..3], w_anode502w[3..3], w_anode492w[3..3], w_anode482w[3..3], w_anode472w[3..3], w_anode462w[3..3], w_anode452w[3..3], w_anode441w[3..3]), ( w_anode419w[3..3], w_anode409w[3..3], w_anode399w[3..3], w_anode389w[3..3], w_anode379w[3..3], w_anode369w[3..3], w_anode359w[3..3], w_anode342w[3..3]));
	w_anode328w[] = ( (w_anode328w[1..1] & (! data_wire[4..4])), (w_anode328w[0..0] & (! data_wire[3..3])), B"1");
	w_anode342w[] = ( (w_anode342w[2..2] & (! w_data326w[2..2])), (w_anode342w[1..1] & (! w_data326w[1..1])), (w_anode342w[0..0] & (! w_data326w[0..0])), w_anode328w[2..2]);
	w_anode359w[] = ( (w_anode359w[2..2] & (! w_data326w[2..2])), (w_anode359w[1..1] & (! w_data326w[1..1])), (w_anode359w[0..0] & w_data326w[0..0]), w_anode328w[2..2]);
	w_anode369w[] = ( (w_anode369w[2..2] & (! w_data326w[2..2])), (w_anode369w[1..1] & w_data326w[1..1]), (w_anode369w[0..0] & (! w_data326w[0..0])), w_anode328w[2..2]);
	w_anode379w[] = ( (w_anode379w[2..2] & (! w_data326w[2..2])), (w_anode379w[1..1] & w_data326w[1..1]), (w_anode379w[0..0] & w_data326w[0..0]), w_anode328w[2..2]);
	w_anode389w[] = ( (w_anode389w[2..2] & w_data326w[2..2]), (w_anode389w[1..1] & (! w_data326w[1..1])), (w_anode389w[0..0] & (! w_data326w[0..0])), w_anode328w[2..2]);
	w_anode399w[] = ( (w_anode399w[2..2] & w_data326w[2..2]), (w_anode399w[1..1] & (! w_data326w[1..1])), (w_anode399w[0..0] & w_data326w[0..0]), w_anode328w[2..2]);
	w_anode409w[] = ( (w_anode409w[2..2] & w_data326w[2..2]), (w_anode409w[1..1] & w_data326w[1..1]), (w_anode409w[0..0] & (! w_data326w[0..0])), w_anode328w[2..2]);
	w_anode419w[] = ( (w_anode419w[2..2] & w_data326w[2..2]), (w_anode419w[1..1] & w_data326w[1..1]), (w_anode419w[0..0] & w_data326w[0..0]), w_anode328w[2..2]);
	w_anode431w[] = ( (w_anode431w[1..1] & (! data_wire[4..4])), (w_anode431w[0..0] & data_wire[3..3]), B"1");
	w_anode441w[] = ( (w_anode441w[2..2] & (! w_data326w[2..2])), (w_anode441w[1..1] & (! w_data326w[1..1])), (w_anode441w[0..0] & (! w_data326w[0..0])), w_anode431w[2..2]);
	w_anode452w[] = ( (w_anode452w[2..2] & (! w_data326w[2..2])), (w_anode452w[1..1] & (! w_data326w[1..1])), (w_anode452w[0..0] & w_data326w[0..0]), w_anode431w[2..2]);
	w_anode462w[] = ( (w_anode462w[2..2] & (! w_data326w[2..2])), (w_anode462w[1..1] & w_data326w[1..1]), (w_anode462w[0..0] & (! w_data326w[0..0])), w_anode431w[2..2]);
	w_anode472w[] = ( (w_anode472w[2..2] & (! w_data326w[2..2])), (w_anode472w[1..1] & w_data326w[1..1]), (w_anode472w[0..0] & w_data326w[0..0]), w_anode431w[2..2]);
	w_anode482w[] = ( (w_anode482w[2..2] & w_data326w[2..2]), (w_anode482w[1..1] & (! w_data326w[1..1])), (w_anode482w[0..0] & (! w_data326w[0..0])), w_anode431w[2..2]);
	w_anode492w[] = ( (w_anode492w[2..2] & w_data326w[2..2]), (w_anode492w[1..1] & (! w_data326w[1..1])), (w_anode492w[0..0] & w_data326w[0..0]), w_anode431w[2..2]);
	w_anode502w[] = ( (w_anode502w[2..2] & w_data326w[2..2]), (w_anode502w[1..1] & w_data326w[1..1]), (w_anode502w[0..0] & (! w_data326w[0..0])), w_anode431w[2..2]);
	w_anode512w[] = ( (w_anode512w[2..2] & w_data326w[2..2]), (w_anode512w[1..1] & w_data326w[1..1]), (w_anode512w[0..0] & w_data326w[0..0]), w_anode431w[2..2]);
	w_anode523w[] = ( (w_anode523w[1..1] & data_wire[4..4]), (w_anode523w[0..0] & (! data_wire[3..3])), B"1");
	w_anode533w[] = ( (w_anode533w[2..2] & (! w_data326w[2..2])), (w_anode533w[1..1] & (! w_data326w[1..1])), (w_anode533w[0..0] & (! w_data326w[0..0])), w_anode523w[2..2]);
	w_anode544w[] = ( (w_anode544w[2..2] & (! w_data326w[2..2])), (w_anode544w[1..1] & (! w_data326w[1..1])), (w_anode544w[0..0] & w_data326w[0..0]), w_anode523w[2..2]);
	w_anode554w[] = ( (w_anode554w[2..2] & (! w_data326w[2..2])), (w_anode554w[1..1] & w_data326w[1..1]), (w_anode554w[0..0] & (! w_data326w[0..0])), w_anode523w[2..2]);
	w_anode564w[] = ( (w_anode564w[2..2] & (! w_data326w[2..2])), (w_anode564w[1..1] & w_data326w[1..1]), (w_anode564w[0..0] & w_data326w[0..0]), w_anode523w[2..2]);
	w_anode574w[] = ( (w_anode574w[2..2] & w_data326w[2..2]), (w_anode574w[1..1] & (! w_data326w[1..1])), (w_anode574w[0..0] & (! w_data326w[0..0])), w_anode523w[2..2]);
	w_anode584w[] = ( (w_anode584w[2..2] & w_data326w[2..2]), (w_anode584w[1..1] & (! w_data326w[1..1])), (w_anode584w[0..0] & w_data326w[0..0]), w_anode523w[2..2]);
	w_anode594w[] = ( (w_anode594w[2..2] & w_data326w[2..2]), (w_anode594w[1..1] & w_data326w[1..1]), (w_anode594w[0..0] & (! w_data326w[0..0])), w_anode523w[2..2]);
	w_anode604w[] = ( (w_anode604w[2..2] & w_data326w[2..2]), (w_anode604w[1..1] & w_data326w[1..1]), (w_anode604w[0..0] & w_data326w[0..0]), w_anode523w[2..2]);
	w_anode615w[] = ( (w_anode615w[1..1] & data_wire[4..4]), (w_anode615w[0..0] & data_wire[3..3]), B"1");
	w_anode625w[] = ( (w_anode625w[2..2] & (! w_data326w[2..2])), (w_anode625w[1..1] & (! w_data326w[1..1])), (w_anode625w[0..0] & (! w_data326w[0..0])), w_anode615w[2..2]);
	w_anode636w[] = ( (w_anode636w[2..2] & (! w_data326w[2..2])), (w_anode636w[1..1] & (! w_data326w[1..1])), (w_anode636w[0..0] & w_data326w[0..0]), w_anode615w[2..2]);
	w_anode646w[] = ( (w_anode646w[2..2] & (! w_data326w[2..2])), (w_anode646w[1..1] & w_data326w[1..1]), (w_anode646w[0..0] & (! w_data326w[0..0])), w_anode615w[2..2]);
	w_anode656w[] = ( (w_anode656w[2..2] & (! w_data326w[2..2])), (w_anode656w[1..1] & w_data326w[1..1]), (w_anode656w[0..0] & w_data326w[0..0]), w_anode615w[2..2]);
	w_anode666w[] = ( (w_anode666w[2..2] & w_data326w[2..2]), (w_anode666w[1..1] & (! w_data326w[1..1])), (w_anode666w[0..0] & (! w_data326w[0..0])), w_anode615w[2..2]);
	w_anode676w[] = ( (w_anode676w[2..2] & w_data326w[2..2]), (w_anode676w[1..1] & (! w_data326w[1..1])), (w_anode676w[0..0] & w_data326w[0..0]), w_anode615w[2..2]);
	w_anode686w[] = ( (w_anode686w[2..2] & w_data326w[2..2]), (w_anode686w[1..1] & w_data326w[1..1]), (w_anode686w[0..0] & (! w_data326w[0..0])), w_anode615w[2..2]);
	w_anode696w[] = ( (w_anode696w[2..2] & w_data326w[2..2]), (w_anode696w[1..1] & w_data326w[1..1]), (w_anode696w[0..0] & w_data326w[0..0]), w_anode615w[2..2]);
	w_data326w[2..0] = data_wire[2..0];
END;
--VALID FILE
